# UI/UX设计专业规则 - 宝宝取名网站

## 核心设计原则

### 1. 设计系统理念
- 建立一致的视觉语言和设计令牌系统
- 优先考虑用户体验，每个交互都要有明确的反馈
- 采用移动优先的响应式设计策略
- 确保无障碍访问性(WCAG 2.1 AA标准)
- 保持视觉层次清晰，信息架构合理
- 体现中华文化特色，融合传统与现代设计元素

### 2. 用户体验原则
- 简化用户操作流程，取名过程不超过3步
- 提供清晰的进度指示和状态反馈
- 确保关键信息的可发现性和可理解性
- 支持多种输入方式和个性化偏好设置
- 优化加载性能，首屏渲染时间<2秒

## 颜色系统规则

### 基础颜色规范
- 必须使用语义化的颜色命名(primary, secondary, success, warning, error, info)
- 每个颜色都要有完整的色阶(50-900，共9个层级)
- 确保颜色对比度符合无障碍标准(4.5:1 for normal text, 3:1 for large text)
- 支持深色模式，所有颜色要有对应的暗色版本
- 避免使用纯黑(#000000)和纯白(#ffffff)，使用更柔和的近似色

### 文化色彩应用
- 主色调体现中华文化特色：温暖的金色系(#d97706)作为主色
- 辅助色彩：雅致的青色、墨色、朱红色等传统色彩
- 背景色使用温暖的米白色或淡雅的灰色
- 文字颜色层次分明：主文字、次要文字、辅助文字

### CSS变量定义规范
```css
:root {
  /* 主色调 */
  --color-primary-50: #fef7ee;
  --color-primary-500: #d97706;
  --color-primary-900: #451a03;
  
  /* 中性色 */
  --color-neutral-50: #fafafa;
  --color-neutral-500: #737373;
  --color-neutral-900: #171717;
  
  /* 语义化颜色 */
  --color-success: #10b981;
  --color-warning: #f59e0b;
  --color-error: #ef4444;
  --color-info: #3b82f6;
}
```

## 字体系统规则

### 字体选择规范
- 中文字体优先级：'Noto Sans SC', 'PingFang SC', 'Microsoft YaHei', sans-serif
- 英文字体优先级：'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif
- 标题字体可使用：'Playfair Display', Georgia, serif（用于装饰性标题）
- 代码字体：'JetBrains Mono', Consolas, monospace

### 字体层级规范
- 主标题(h1): 2.25rem (36px), font-weight: 700
- 次标题(h2): 1.875rem (30px), font-weight: 600
- 三级标题(h3): 1.5rem (24px), font-weight: 600
- 正文(body): 1rem (16px), font-weight: 400
- 小字(caption): 0.875rem (14px), font-weight: 400
- 行高规范：标题1.25，正文1.5，说明文字1.4

### 中文排版优化
- 中英文混排时要注意字符间距
- 标点符号使用全角字符
- 避免中文字体过细或过粗
- 考虑不同设备的字体渲染差异

## 间距系统规则

### 基础网格系统
- 使用8px基础网格系统，所有间距值必须是4的倍数
- 组件内部间距：4px, 8px, 12px, 16px
- 组件间间距：16px, 24px, 32px, 48px
- 页面级间距：48px, 64px, 80px, 96px

### 间距语义化
```css
:root {
  --space-1: 0.25rem;   /* 4px - 最小间距 */
  --space-2: 0.5rem;    /* 8px - 紧密间距 */
  --space-3: 0.75rem;   /* 12px - 小间距 */
  --space-4: 1rem;      /* 16px - 标准间距 */
  --space-6: 1.5rem;    /* 24px - 中等间距 */
  --space-8: 2rem;      /* 32px - 大间距 */
  --space-12: 3rem;     /* 48px - 特大间距 */
}
```

### 布局间距规则
- 卡片内边距：16px-24px
- 按钮内边距：8px-16px（高度32px-48px）
- 表单元素间距：16px
- 页面边距：16px（移动端）, 24px（桌面端）

## 组件设计规则

### 通用组件规范
- 每个组件必须有hover、focus、active、disabled状态
- 使用微交互增强用户体验（150ms-300ms过渡动画）
- 组件要支持不同尺寸变体(sm, md, lg, xl)
- 确保组件的可组合性和可扩展性
- 所有交互元素的最小点击区域为44px×44px（移动端）

### 按钮设计规范
```typescript
// 按钮变体定义
type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'ghost' | 'destructive';
type ButtonSize = 'sm' | 'md' | 'lg' | 'xl';

// 设计规则：
// - Primary: 主要操作，每个界面最多一个，使用品牌色
// - Secondary: 次要操作，使用中性色
// - Outline: 边框按钮，用于不太重要的操作
// - Ghost: 幽灵按钮，用于最不重要的操作
// - 必须包含loading状态和图标支持
```

### 表单设计规范
- 标签在输入框上方，左对齐，使用中等字重
- 输入框高度：40px（md）, 32px（sm）, 48px（lg）
- 错误信息在输入框下方，使用错误色显示
- 帮助文本使用较小字号和中性色
- 必填字段用红色星号(*)标记
- 表单验证要实时反馈，成功状态用绿色边框

### 卡片设计规范
- 使用微妙的阴影创建层次感：box-shadow: 0 1px 3px rgba(0,0,0,0.1)
- 圆角使用一致的radius值：8px（标准）, 12px（大卡片）
- 内容要有合适的内边距：16px-24px
- hover状态要有视觉反馈：轻微上移和阴影加深
- 支持不同的内容密度：紧凑、标准、宽松

### 导航设计规范
- 当前页面要有明确的视觉指示（高亮、下划线等）
- 移动端要考虑拇指操作区域（底部导航）
- 面包屑导航要显示完整路径，支持点击跳转
- 搜索功能要有自动完成和历史记录
- 导航层级不超过3层

## 动画与交互规则

### 动画时长规范
- 快速交互：150ms（hover、focus状态变化）
- 常规交互：300ms（页面切换、模态框显示）
- 复杂动画：500ms（页面转场、复杂状态变化）
- 避免超过500ms的动画，影响用户体验

### 缓动函数规范
- 进入动画：ease-out (cubic-bezier(0, 0, 0.2, 1))
- 退出动画：ease-in (cubic-bezier(0.4, 0, 1, 1))
- 双向动画：ease-in-out (cubic-bezier(0.4, 0, 0.2, 1))

### 微交互设计
- 按钮点击：轻微缩放(scale: 0.98)和颜色变化
- 卡片hover：轻微上移(translateY: -2px)和阴影加深
- 加载状态：使用骨架屏或优雅的loading动画
- 状态反馈：成功、错误、警告要有对应的动画提示

### 性能优化
- 优先使用transform和opacity属性做动画
- 避免动画过多导致的性能问题
- 为用户提供减少动画的选项（prefers-reduced-motion）
- 在低性能设备上自动降级动画效果

## 响应式设计规则

### 断点系统
```css
:root {
  --breakpoint-sm: 640px;   /* 手机横屏 */
  --breakpoint-md: 768px;   /* 平板竖屏 */
  --breakpoint-lg: 1024px;  /* 平板横屏/小笔记本 */
  --breakpoint-xl: 1280px;  /* 桌面显示器 */
  --breakpoint-2xl: 1536px; /* 大屏显示器 */
}
```

### 移动优先策略
- CSS编写采用移动优先的方式
- 触摸友好的交互设计，按钮间距足够大
- 考虑不同设备的性能差异
- 优化移动端的加载速度和交互体验

### 内容适配规则
- 文字大小在移动端适当增大
- 图片要支持不同分辨率和格式
- 表格在小屏幕上要有横向滚动或卡片化显示
- 导航在移动端要简化或使用汉堡菜单

## 无障碍访问性规则

### 键盘导航
- 所有交互元素都要支持键盘操作
- Tab键顺序要符合逻辑
- 焦点指示要清晰可见
- 支持快捷键操作

### 屏幕阅读器支持
- 使用语义化的HTML标签
- 添加适当的ARIA属性
- 图片要有有意义的alt文本
- 表单要有明确的标签关联

### 颜色和对比度
- 颜色不是唯一的信息传达方式
- 文字与背景的对比度要符合标准
- 链接要有除颜色外的其他视觉提示
- 支持高对比度模式

## 文化特色设计规则

### 中华文化元素融入
- 适当使用传统图案和纹样（如云纹、回纹等）
- 色彩搭配体现中式美学（如水墨色、朱砂色等）
- 字体选择要体现汉字之美
- 布局要有中式的平衡感和留白美学

### 取名相关的视觉设计
- 汉字展示要突出字形之美
- 五行元素要有对应的视觉表现
- 生肖元素可以适当的图形化表达
- 诗词典故要有优雅的排版设计

## 性能优化规则

### 加载性能
- 首屏渲染时间<2秒
- 图片要进行压缩和懒加载
- 使用CDN加速静态资源
- 代码分割减小初始加载体积

### 运行时性能
- 避免不必要的重渲染
- 使用虚拟滚动处理大列表
- 动画使用GPU加速
- 内存使用要合理，避免内存泄漏

## 代码实现规范

### CSS组织规则
- 使用CSS变量管理设计令牌
- 采用BEM或类似的命名规范
- 组件样式要模块化
- 避免深层嵌套选择器

### 组件开发规范
- 使用TypeScript确保类型安全
- 组件要有完整的Props接口定义
- 支持ref转发和事件处理
- 提供完整的文档和示例

### 样式工具使用
- 优先使用Tailwind CSS的工具类
- 自定义样式要通过CSS变量实现
- 避免内联样式，除非是动态计算的值
- 使用PostCSS插件优化CSS输出

## 测试与质量保证

### 视觉回归测试
- 关键页面要有视觉快照测试
- 不同断点的显示效果要验证
- 深色模式的显示要测试
- 无障碍性要通过自动化工具检查

### 用户体验测试
- 关键流程要有用户测试
- 性能指标要持续监控
- 错误处理要友好且有帮助
- 加载状态要有适当的反馈

## 设计评审检查清单

### 视觉设计检查
□ 颜色使用是否一致且有意义
□ 字体层级是否清晰
□ 间距是否遵循网格系统
□ 对比度是否符合无障碍标准
□ 视觉层次是否合理
□ 中华文化元素是否恰当融入

### 交互设计检查
□ 所有交互元素都有反馈
□ 加载状态是否有适当的指示
□ 错误处理是否友好
□ 表单验证是否实时
□ 导航是否直观
□ 取名流程是否简洁高效

### 响应式设计检查
□ 在所有断点都能正常显示
□ 触摸目标是否足够大
□ 内容是否适配不同屏幕
□ 性能是否在移动设备上可接受
□ 横竖屏切换是否正常

### 无障碍性检查
□ 键盘导航是否完整
□ 屏幕阅读器是否能正确识别
□ 颜色不是唯一的信息传达方式
□ 焦点指示是否清晰可见
□ ARIA属性是否正确使用

## 提示词模板

### 创建组件时的标准提示词
"请创建一个现代化的[组件名]组件，要求：
1. 使用TypeScript和React，确保类型安全
2. 支持多种变体(variant)和尺寸(size)，使用CVA管理变体
3. 包含完整的交互状态(hover, focus, active, disabled)
4. 使用Tailwind CSS和CSS变量，遵循设计令牌系统
5. 确保无障碍访问性，添加适当的ARIA属性
6. 添加适当的微交互动画，使用合适的缓动函数
7. 支持深色模式，使用CSS变量适配
8. 提供完整的TypeScript类型定义和JSDoc注释
9. 体现中华文化特色，适当融入传统设计元素
10. 确保移动端友好，触摸目标足够大"

### 样式优化提示词
"请优化这个组件的样式，要求：
1. 遵循现代设计系统原则，使用一致的设计令牌
2. 改善视觉层次和对比度，确保可读性
3. 添加微妙的阴影和渐变效果，提升质感
4. 确保响应式设计，在所有设备上都有良好体验
5. 优化动画和过渡效果，使用合适的时长和缓动
6. 提升整体的视觉质量和用户体验
7. 融入中华文化元素，体现取名网站的文化特色
8. 确保无障碍访问性，符合WCAG 2.1 AA标准"

### 布局设计提示词
"请设计一个[页面/区域]的布局，要求：
1. 使用CSS Grid或Flexbox，采用现代布局技术
2. 移动优先的响应式设计，确保各设备适配
3. 清晰的视觉层次，重要信息突出显示
4. 合理的信息密度，避免过于拥挤或空旷
5. 考虑用户的视觉流向，符合F型或Z型阅读习惯
6. 确保内容的可读性和可访问性
7. 体现中华文化的美学特色，如留白、平衡等
8. 针对取名场景优化，突出名字展示和分析功能"

## 持续改进机制

### 设计系统维护
- 定期更新设计令牌和组件库
- 收集用户反馈，持续优化用户体验
- 关注设计趋势，适时更新视觉风格
- 进行A/B测试验证设计决策

### 团队协作
- 设计师和开发者要密切协作
- 建立设计评审流程，确保质量
- 定期进行设计系统培训
- 维护完整的设计文档和组件文档

记住：好的设计不仅要美观，更要实用。在追求视觉效果的同时，始终以用户体验为核心，让用户能够轻松愉快地为宝宝找到心仪的名字。
